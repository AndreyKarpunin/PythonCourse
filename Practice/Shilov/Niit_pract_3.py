
# Task 1
"""
Создаем  пустой список lst и последовательно добавляем в него числа из
последовательности от 1 до 100, по порядку, проверяя являются ли данные
числа кратными 15, 5 и 3. Если это так, в этом случае меняем числа
на заданные строки
"""
lst = []
for x in range(1, 101):
    if x % 15 == 0:
        lst.append('FizzBuzz')
    elif x % 5 == 0:
        lst.append('Buzz')
    elif x % 3 == 0:
        lst.append('Fizz')
    else:
        lst.append(x)

print (lst)

# Task 2
"""
Программа запрашивает вести число, после чего проверяем веденное число
на соответствие, чтобы оно было, во-первых, числом, а, во-торых, 
пятизначным. Если введенное число соответсвтует требованию, то на
экран выводится требуемая информация. Если введено не чило или оно
не пятизначное, то выводится сообщение, о необходимости повторить ввод.
"""
num = input('Введите пятизначное число: ')
while num != 'exit':
    if num.isdigit() and len(num) == 5:
        print(f'Число: {num}')
        lst = list(num)
        for x in range(1, len(lst)+1):
            print(f'{x} цифра равна {lst[x-1]}')
    else:
        print('Вы ввели некорректное значение')
    num = input('Введите пятизначное число: ')

# Task 3
"""
Эту задачу решил двумя способами(не считая функциию sort)
Первый вариант, немного отходит от инструкции.
Создаем функцию, которая в качетве аргумента принимает список чисел arr.
Внутри функции создаем пустой список. Затем создаем цикл, условием
выполнения которого является длина списка arr. В теле цикла
первым действием определяем мимимальный элемент из списка arr, который
затем вносим в новый список. Затем удаляем этот элемент из списка arr.
Операции повторяются до тех пор пока все элементы списка arr не попадут
в новый список, где будут уже расположены по возрастанию.
В результате функция возвращает отсортированный по возрастанию список.
Второй вариант делал уже отталкиваясь от инструкции. Создаем цикл for
с итератором num который поочередно перебирает элементы списка arr.
Внутри цикла создаем второй цикл который перебирает индексы элементов
списка arr. Внутри этого цикла задаем условие, при выполнении которого
элементы списка меняем местами. Таким образом поочередно элементы 
списка arr сравниваются друг с другом и сортируются по возрастанию.
"""
arr = [0, 3, 24, 2, 3, 7]

def sort_arr (arr):
    new_arr = []
    while len(arr) != 0:
        new_arr.append(min(arr))
        del arr[arr.index(min(arr))]
    return new_arr

print(sort_arr(arr))

arr = [0, 3, 24, 2, 3, 7]

for num in arr:
    for x in range(0, len(arr)):
        if arr[arr.index(num)] > arr[x]:
            arr[x], arr[arr.index(num)] = arr[arr.index(num)], arr[x]

print(arr)

